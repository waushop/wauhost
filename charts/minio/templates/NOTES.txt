{{- $fullName := include "minio.fullname" . -}}
🎉 MinIO has been deployed successfully!

📋 Service Information:
   Namespace: {{ .Values.namespace }}
   Release:   {{ .Release.Name }}

🌐 Access URLs:
   {{- if .Values.minio.api.host }}
   API:     https://{{ .Values.minio.api.host }}
   Console: https://{{ .Values.minio.console.host }}
   {{- else }}
   API:     http://{{ $fullName }}.{{ .Values.namespace }}.svc.cluster.local:9000
   Console: http://{{ $fullName }}.{{ .Values.namespace }}.svc.cluster.local:9001
   {{- end }}

{{- if .Values.externalSecrets.enabled }}
🔐 Credentials:
   Credentials are managed by External Secrets.
   Secret Name: {{ $fullName }}-credentials
   
   To retrieve credentials from your secret backend:
   kubectl get externalsecret {{ $fullName }}-credentials -n {{ .Values.namespace }}
{{- else }}
⚠️  WARNING: Using local secrets. Consider enabling External Secrets for production!
   
   Get credentials:
   export ROOT_USER=$(kubectl get secret {{ .Release.Name }}-secret -n {{ .Values.namespace }} -o jsonpath="{.data.rootUser}" | base64 -d)
   export ROOT_PASSWORD=$(kubectl get secret {{ .Release.Name }}-secret -n {{ .Values.namespace }} -o jsonpath="{.data.rootPassword}" | base64 -d)
{{- end }}

📦 Configured Buckets:
{{- range .Values.minio.buckets }}
   - {{ .name }}{{ if .public }} (public){{ end }}
{{- end }}

🔧 MinIO Client Setup:
   # Install MinIO client
   brew install minio/stable/mc  # macOS
   # or
   wget https://dl.min.io/client/mc/release/linux-amd64/mc && chmod +x mc

   # Configure client
   mc alias set {{ .Release.Name }} https://{{ .Values.minio.api.host }} $ROOT_USER $ROOT_PASSWORD

   # List buckets
   mc ls {{ .Release.Name }}/

{{- if .Values.minio.backup.enabled }}
💾 Backup Configuration:
   Schedule: {{ .Values.minio.backup.schedule }}
   Target:   {{ .Values.minio.backup.endpoint }}
   Buckets:  {{ join ", " .Values.minio.backup.buckets }}
{{- end }}

{{- if .Values.networkPolicy.enabled }}
🔒 Security:
   ✓ Network Policy enabled
   ✓ RBAC configured
   ✓ Pod Security Standards applied
{{- end }}

📊 Monitoring:
   Metrics endpoint: http://{{ $fullName }}.{{ .Values.namespace }}.svc.cluster.local:9000/minio/v2/metrics/cluster
   
   View metrics:
   kubectl port-forward -n {{ .Values.namespace }} svc/{{ $fullName }} 9000:9000
   curl http://localhost:9000/minio/v2/metrics/cluster

📚 Next Steps:
   1. Create application users and policies
   2. Configure application S3 clients
   3. Set up lifecycle policies for buckets
   4. Monitor storage usage and performance

🆘 Troubleshooting:
   # Check pod status
   kubectl get pods -n {{ .Values.namespace }} -l app.kubernetes.io/name={{ include "minio.name" . }}
   
   # View logs
   kubectl logs -n {{ .Values.namespace }} -l app.kubernetes.io/name={{ include "minio.name" . }} --tail=100
   
   # Check events
   kubectl get events -n {{ .Values.namespace }} --field-selector involvedObject.name={{ $fullName }}

For more information, visit: https://min.io/docs/