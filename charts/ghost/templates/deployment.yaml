apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.releaseName }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.releaseName }}
  template:
    metadata:
      labels:
        app: {{ .Values.releaseName }}
    spec:
      containers:
        - name: ghost
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: url
              value: "https://{{ .Values.host }}"
            - name: database__connection__host
              value: "{{ .Values.database.host }}"
            - name: database__connection__user
              value: "{{ .Values.database.user }}"
            - name: database__connection__password
              value: "{{ .Values.database.password }}"
            - name: database__connection__database
              value: "{{ .Values.database.database }}"
            - name: mail__transport
              value: "{{ .Values.mail.transport }}"
            - name: mail__options__service
              value: "{{ .Values.mail.options.service }}"
            - name: mail__options__host
              value: "{{ .Values.mail.options.host }}"
            - name: mail__options__port
              value: "{{ .Values.mail.options.port }}"
            - name: mail__options__secure
              value: "{{ .Values.mail.options.secure }}"
            - name: mail__options__auth__user
              value: "{{ .Values.mail.options.auth.user }}"
            - name: mail__options__auth__pass
              value: "{{ .Values.mail.options.auth.pass }}"
            - name: mail__from
              value: "{{ .Values.mail.from }}"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 2368
          volumeMounts:
            - name: ghost-content
              mountPath: /var/lib/ghost/content
      volumes:
        - name: ghost-content
          persistentVolumeClaim:
            claimName: {{ .Values.releaseName }}-pvc
